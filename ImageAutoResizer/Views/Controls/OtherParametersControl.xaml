<UserControl x:Class="ImageBatchResizer.Views.Controls.OtherParametersControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:ImageBatchResizer.Views.Controls"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:uc="clr-namespace:ImageBatchResizer.Views.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <StackPanel Orientation="Vertical">
        <uc:SliderWithTextboxControl Margin="0 0 0 0"
                                     Title="并行处理数量"
                                     ToolTipContent="同时并行处理多少张图片。图片较多时，增加并行处理数量可以显著降低处理的总时间，但是会占用更多的 CPU 与内存资源。该值的上限是可识别的 CPU 逻辑核心数。"
                                     Maximum="{Binding MaxParallelCount, Mode=OneWay}" 
                                     Minimum="1"
                                     Value="{Binding ParallelCount}"/>

        <StackPanel Orientation="Vertical" Margin="0 24 0 0">
            <uc:LabelWithToolTipControl Text="输出文件夹"
                                        ToolTipVisibility="Collapsed"/>
            <DockPanel Margin="4 8 0 0">
                <Button DockPanel.Dock="Right" 
                        Margin="4 0 0 0"
                        VerticalAlignment="Stretch"
                        Command="{Binding SelectOutputFolderCommand}">选择文件夹</Button>
                <TextBox VerticalContentAlignment="Center"
                             Text="{Binding OutputPath}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding ResetOuputPathErrorContentCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </DockPanel>
            <Label Margin="4 4 0 0" 
                   Style="{StaticResource ErrorLabelStyle}" 
                   Content="{Binding OuputPathErrorContent}"/>
        </StackPanel>

        <StackPanel Orientation="Vertical" Margin="0 24 0 0">
            <uc:LabelWithToolTipControl Text="输出文件名"/>
            <TextBox Text="{Binding OutputFileNamePattern}"
                     Margin="4 8 0 0">
            </TextBox>
            <WrapPanel MaxWidth="300"
                       Margin="0 4 0 0">
                <CheckBox VerticalContentAlignment="Center"
                          Margin="4"
                          IsChecked="{Binding IsEnableOriginFileName}">
                    <Label>原文件名 {name}</Label>
                </CheckBox>
                <CheckBox VerticalContentAlignment="Center"
                          Margin="4"
                          IsChecked="{Binding IsEnableIndex}">
                    <Label>序号 {index}</Label>
                </CheckBox>
                <CheckBox VerticalContentAlignment="Center"
                          Margin="4"
                          IsChecked="{Binding IsEnableTime}">
                    <Label>时间日期 {time}</Label>
                </CheckBox>
                <CheckBox VerticalContentAlignment="Center"
                          Margin="4"
                          IsChecked="{Binding IsEnableQuality}">
                    <Label>图片质量 {quality}</Label>
                </CheckBox>
            </WrapPanel>
        </StackPanel>
        
        <Label Margin="0 24 0 0">
            <TextBlock TextWrapping="WrapWithOverflow">目标文件夹已有该图片时：</TextBlock>
        </Label>
        <WrapPanel Margin="4 0 0 0">
            <RadioButton VerticalContentAlignment="Center"
                         Margin="0 8 0 0"
                         IsChecked="{Binding IsCheckDontCoverExist}">
                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">不保存结果</TextBlock>
                </Label>
            </RadioButton>
            <RadioButton VerticalContentAlignment="Center"
                         Margin="0 8 0 0"
                         IsChecked="{Binding IsCheckCoverExist}">
                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">保存并覆盖</TextBlock>
                </Label>
            </RadioButton>
        </WrapPanel>
    </StackPanel>
</UserControl>
