<fw:AcrylicWindow x:Class="ImageBatchResizer.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:ImageBatchResizer.Views"
        xmlns:uc="clr-namespace:ImageBatchResizer.Views.Controls"
        xmlns:pg="clr-namespace:ImageBatchResizer.Views.Pages"
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
        mc:Ignorable="d"
        NoiseOpacity="0.005"
        ExtendViewIntoTitleBar="False"
        Title="MainWindow" Height="720" Width="900" MinWidth="500" MinHeight="600">
    <!-- xmlns:i https://stackoverflow.com/questions/20743961/the-name-interaction-does-not-exist-in-the-namespace-http-schemas-microsoft -->

    <Window.Resources>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        
        <ContentPresenter x:Name="RootContentDialog" Grid.Row="0" Grid.RowSpan="2"/>
        
        <!--<ui:NavigationView x:Name="RootNavigation"
                           OpenPaneLength="200"
                           MenuItemsSource="{Binding NavMenuItems, Mode=OneWay}"
                           IsBackButtonVisible="Collapsed">
            <ui:NavigationView.ContentOverlay>
                <Grid>
                    <ui:SnackbarPresenter x:Name="RootSnackbarPresenter" />
                </Grid>
            </ui:NavigationView.ContentOverlay>
            
            <ui:NavigationView.MenuItems>
                <ui:NavigationViewItem Content="打开文件"
                                       TargetPageType="{x:Type pg:FilePage}"
                                       DataContext="{Binding .}">
                    <ui:NavigationViewItem.Icon>
                        <ui:FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xe8e5;"/>
                    </ui:NavigationViewItem.Icon>
                </ui:NavigationViewItem>
                <ui:NavigationViewItem Content="全部参数"
                                       TargetPageType="{x:Type local:TotalParametersPage}">
                    <ui:NavigationViewItem.Icon>
                        <ui:FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xf246;"/>
                    </ui:NavigationViewItem.Icon>
                </ui:NavigationViewItem>
            </ui:NavigationView.MenuItems>
            
        </ui:NavigationView>-->
        <DockPanel Grid.Row="1" Margin="0 4 0 4">
            <ui:Button DockPanel.Dock="Right"
                           Margin="0 0 4 0"
                           Height="32"
                           Appearance="Primary"
                           VerticalAlignment="Stretch"
                           Content="下一个"/>
            <ui:Button DockPanel.Dock="Right"
                           Margin="0 0 4 0"
                           Height="32"
                           VerticalAlignment="Stretch"
                           Content="上一个"/>
            <ui:Button DockPanel.Dock="Right"
                           Margin="0 0 5 0"
                           Height="32"
                        VerticalAlignment="Stretch"
                            Command="{Binding StartCommand}"
                            IsEnabled="{Binding IsEnableStartButton}"
                                Content="{Binding StartButtonContent}"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <ProgressBar Grid.Column="0"
                                 Height="32"
                                 Margin="4 0 4 0"
                                 HorizontalAlignment="Stretch"
                             Grid.ColumnSpan="2" 
                             x:Name="ProcessProgressBar"
                             Value="{Binding ProcessedPercent}"/>
                <TextBlock Text="{Binding ProcessedInstruction}"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Grid.Column="0"
                           Margin="0 0 4 0"/>
                <TextBlock Text="{Binding ElementName=ProcessProgressBar, Path=Value, Converter={StaticResource ProgressBarValueRound}}"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Grid.Column="1"
                           Margin="4 0 0 0"/>
            </Grid>
        </DockPanel>

        <TabControl>
            <!-- 待处理图像 -->
            <TabItem IsSelected="True" VerticalAlignment="Bottom">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <ui:SymbolIcon Margin="0,0,6,0" Symbol="ImageShadow20" />
                        <TextBlock Text="待处理图像" />
                        <!--<Button DockPanel.Dock="Right" Padding="2">
                            <ui:FontIcon FontSize="12"
                                     FontFamily="Segoe Fluent Icons" 
                                     Glyph="&#xef2c;"/>
                        </Button>-->
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <uc:FilesControl DataContext="{Binding .}" 
                                     BottomRowHeight="40"
                                     IsEnableEdit="{Binding IsEnableParametersPanel}"/>
                </Grid>
            </TabItem>

            <!-- 输入参数和模式 -->
            <TabItem IsSelected="True">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <ui:FontIcon Margin="4 0 8 0" 
                                     FontFamily="Segoe Fluent Icons" 
                                     Glyph="&#xedfb;"/>
                        <TextBlock Text="输入参数与模式" />
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <!-- 左边的输入参数 -->
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <StackPanel Margin="16">
                            <Label Margin="0 0 0 24">
                                <ui:TextBlock FontTypography="Subtitle" Text="输入参数"/>
                            </Label>
                            <uc:InputParametersControl DataContext="{Binding .}"
                                               MaxWidth="600"
                                               IsEnabled="{Binding IsEnableParametersPanel}"/>
                        </StackPanel>
                    </ScrollViewer>
                    <!-- 右边的模式参数 -->
                    <ScrollViewer VerticalScrollBarVisibility="Auto"
                                Grid.Column="1">
                        <StackPanel Margin="16">
                            <Label Margin="0 0 0 0">
                                <ui:TextBlock FontTypography="Subtitle" Text="模式"/>
                            </Label>
                            <uc:ModeControl DataContext="{Binding .}" 
                                               MaxWidth="600"
                                               IsEnabled="{Binding IsEnableParametersPanel}"/>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </TabItem>

            <TabItem IsSelected="True">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <ui:SymbolIcon Margin="0,0,6,0" Symbol="ToggleMultiple16" />
                        <TextBlock Text="输出参数" />
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    
                </Grid>
            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <DockPanel LastChildFill="False">
                        <!-- https://github.com/microsoft/fluentui-system-icons/blob/main/icons_regular.md -->
                        <!-- https://learn.microsoft.com/en-us/windows/apps/design/style/segoe-ui-symbol-font -->
                        <ui:FontIcon Margin="4 0 8 0" 
                                     FontFamily="Segoe Fluent Icons" 
                                     Glyph="&#xf246;"/>
                        <TextBlock Text="全部参数" />
                    </DockPanel>
                </TabItem.Header>
                
                <Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="2*" MinHeight="400" MaxHeight="800"/>
                        </Grid.RowDefinitions>

                        <uc:FilesControl DataContext="{Binding .}" 
                                     BottomRowHeight="40"
                                     IsEnableEdit="{Binding IsEnableParametersPanel}"/>

                        <Grid Grid.Row="1" Margin="0 8 0 8" IsEnabled="{Binding IsEnableParametersPanel}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>



                            <!-- 输入参数 -->
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <uc:InputParametersControl DataContext="{Binding .}"
                                                   Margin="4"
                                               MaxWidth="600"
                                               IsEnabled="{Binding IsEnableParametersPanel}"/>
                            </ScrollViewer>

                            <!-- 右边的模式参数 -->
                            <ScrollViewer VerticalScrollBarVisibility="Auto"
                                Grid.Column="1">
                                <uc:ModeControl DataContext="{Binding .}" 
                                            Margin="4"
                                               MaxWidth="600"
                                               IsEnabled="{Binding IsEnableParametersPanel}"/>
                            </ScrollViewer>

                            <StackPanel Grid.Column="2" Orientation="Vertical" Margin="8 0 8 0">
                                <Label Style="{StaticResource WrapLabelStyle}" Content="输出格式"/>
                                <ComboBox Margin="0 4 0 4"
                          ItemsSource="{Binding FormatList}"
                          SelectedValue="{Binding SelectedFormatModel}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                                <Label Style="{StaticResource WrapLabelStyle}" 
                       Content="Webp 压缩模式"
                       Visibility="{Binding IsWebpEncoder, Converter={StaticResource IsCheck2VisibilityConverter}}"/>
                                <WrapPanel Orientation="Horizontal"
                           Visibility="{Binding IsWebpEncoder, Converter={StaticResource IsCheck2VisibilityConverter}}">
                                    <RadioButton IsChecked="{Binding IsWebpLossyMode}"
                                 Margin="4"
                                 VerticalContentAlignment="Center">
                                        <Label>有损</Label>
                                    </RadioButton>
                                    <RadioButton Margin="4"
                                 VerticalContentAlignment="Center">
                                        <Label>无损</Label>
                                    </RadioButton>
                                </WrapPanel>

                                <Label Style="{StaticResource WrapLabelStyle}" 
                       Content="{Binding CompressDescrption}" 
                       Visibility="{Binding IsEnableCompressAdjust, Converter={StaticResource IsCheck2VisibilityConverter}}"/>
                                <DockPanel Margin="0 4 0 4"
                           Visibility="{Binding IsEnableCompressAdjust, Converter={StaticResource IsCheck2VisibilityConverter}}">
                                    <TextBox Width="40" 
                                 HorizontalContentAlignment="Center"
                                 DockPanel.Dock="Left"
                                 Text="{Binding ElementName=QualitySlider, Path=Value}"/>
                                    <Slider x:Name="QualitySlider" 
                                Maximum="{Binding SliderMaximum}" 
                                            TickPlacement="Both"
                                Minimum="{Binding SliderMinimum}" 
                                Margin="8 0 8 0" 
                                Value="{Binding Quality}" 
                                SmallChange="1" 
                                LargeChange="5"
                                DockPanel.Dock="Right"
                                IsSnapToTickEnabled="True"
                                TickFrequency="1"/>
                                </DockPanel>

                                <StackPanel Visibility="{Binding IsEnableWebpUniqueArgs, Converter={StaticResource IsCheck2VisibilityConverter}}"
                            Orientation="Vertical">
                                    <Label Style="{StaticResource WrapLabelStyle}" 
                       Content="编码质量"/>
                                    <DockPanel Margin="0 4 0 4">
                                        <TextBox Width="40" 
                                 HorizontalContentAlignment="Center"
                                 DockPanel.Dock="Left"
                                 Text="{Binding ElementName=EncodingMethodSlider, Path=Value}"/>
                                        <Slider x:Name="EncodingMethodSlider" 
                                Maximum="6" 
                                Minimum="0" 
                                                TickPlacement="Both"
                                Margin="8 0 8 0" 
                                Value="{Binding EncodingMethod}" 
                                SmallChange="1" 
                                LargeChange="5"
                                DockPanel.Dock="Right"
                                IsSnapToTickEnabled="True"
                                TickFrequency="1"/>
                                    </DockPanel>
                                </StackPanel>

                                <Label Style="{StaticResource WrapLabelStyle}" Content="采样算法"/>
                                <ComboBox Margin="0 4 0 4"
                          ItemsSource="{Binding ResamplerList}"
                          SelectedValue="{Binding SelectedResamplerModel}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>


                            </StackPanel>

                            <StackPanel Grid.Column="3" Orientation="Vertical" Margin="8 0 8 0">
                                <Label Style="{StaticResource WrapLabelStyle}" Content="其他参数"/>
                                <Label Style="{StaticResource WrapLabelStyle}" 
                       Content="并行处理数量"/>
                                <DockPanel Margin="0 4 0 4">
                                    <TextBox Width="40" 
                                 HorizontalContentAlignment="Center"
                                 DockPanel.Dock="Left"
                                 Text="{Binding ElementName=ParallelCountSlider, Path=Value}"/>
                                    <Slider x:Name="ParallelCountSlider" 
                                Maximum="{Binding MaxParallelCount}" 
                                Minimum="1" 
                                            TickPlacement="Both"
                                Margin="8 0 8 0" 
                                Value="{Binding ParallelCount}" 
                                SmallChange="1" 
                                LargeChange="5"
                                DockPanel.Dock="Right"
                                IsSnapToTickEnabled="True"
                                TickFrequency="1"/>
                                </DockPanel>

                                <Label Style="{StaticResource WrapLabelStyle}" Content="输出文件夹"/>
                                <DockPanel>
                                    <Button DockPanel.Dock="Right" 
                            Margin="4 0 0 0"
                            Padding="8 0 8 0"
                                VerticalAlignment="Stretch"
                            Command="{Binding SelectOutputFolderCommand}">选择文件夹</Button>
                                    <TextBox VerticalContentAlignment="Center"
                             Text="{Binding OutputPath}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding ResetOuputPathErrorContentCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                </DockPanel>
                                <Label Style="{StaticResource ErrorLabelStyle}" Content="{Binding OuputPathErrorContent}"/>

                                <Label Style="{StaticResource WrapLabelStyle}" Content="输出文件名"/>
                                <TextBox VerticalContentAlignment="Center" 
                         Text="{Binding OutputFileNamePattern}">
                                </TextBox>
                                <WrapPanel>
                                    <CheckBox VerticalContentAlignment="Center"
                              IsChecked="{Binding IsEnableOriginFileName}">
                                        <Label>原文件名 {name}</Label>
                                    </CheckBox>
                                    <CheckBox VerticalContentAlignment="Center"
                              IsChecked="{Binding IsEnableIndex}">
                                        <Label>序号 {index}</Label>
                                    </CheckBox>
                                    <CheckBox VerticalContentAlignment="Center"
                              IsChecked="{Binding IsEnableTime}">
                                        <Label>时间日期 {time}</Label>
                                    </CheckBox>
                                    <CheckBox VerticalContentAlignment="Center"
                              IsChecked="{Binding IsEnableQuality}">
                                        <Label>图片质量 {quality}</Label>
                                    </CheckBox>
                                </WrapPanel>

                                <Label Style="{StaticResource WrapLabelStyle}" Content="目标文件夹已有该图片时："/>
                                <WrapPanel>
                                    <RadioButton VerticalContentAlignment="Center"
                                 IsChecked="{Binding IsCheckDontCoverExist}">
                                        <Label Style="{StaticResource WrapLabelStyle}" Content="不保存结果"/>
                                    </RadioButton>
                                    <RadioButton VerticalContentAlignment="Center">
                                        <Label Style="{StaticResource WrapLabelStyle}" Content="保存并覆盖"/>
                                    </RadioButton>
                                </WrapPanel>
                            </StackPanel>
                        </Grid>


                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>

</fw:AcrylicWindow>
